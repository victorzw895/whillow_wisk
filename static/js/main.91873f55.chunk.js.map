{"version":3,"sources":["Components/NavBar.js","Components/Footer.js","Components/About.js","Components/Contact.js","Components/Location.js","Components/Menu.js","Routes.js","Components/App.js","serviceWorker.js","index.js"],"names":["NavBar","props","id","map","page","to","toLowerCase","Footer","About","Component","Contact","placeholder","style","resize","Location","useState","lat","lng","center","zoom","height","width","display","justifyContent","bootstrapURLKeys","key","defaultCenter","defaultZoom","Menu","src","Routes","exact","path","component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yOA2BeA,EAxBA,SAAAC,GAGb,OACE,yBAAKC,GAAG,UACN,4BAJU,CAAC,QAAS,OAAQ,WAAY,WAK/BC,KAAI,SAAAC,GAAI,OACb,kBAAC,IAAD,CAAMC,GAAE,WAAMD,EAAKE,gBACjB,4BAAKF,UCAFG,EATA,WACb,OACE,yBAAKL,GAAG,UACN,kDACA,qD,+CCJeM,E,iLAEjB,OACE,6BACE,mEACA,6BACA,4PAMA,4PAMA,iQ,GAlB2BC,aCiBpBC,EAjBC,WACd,OACE,6BACE,0CACA,yBAAKR,GAAG,WACN,2BAAOS,YAAY,SACnB,2BAAOA,YAAY,WACnB,8BACEA,YAAY,kBACZC,MAAO,CAAEC,OAAQ,UAEnB,2C,yBCyBOC,EAnCE,WAAO,IAAD,EACOC,mBAAS,CAAEC,KAAM,OAAQC,IAAK,WADrC,mBACdC,EADc,aAEGH,mBAAS,KAFZ,mBAEdI,EAFc,UAIrB,OACE,6BACE,wCACA,yBAAKjB,GAAG,YACN,6BACE,oDACA,2CACA,wCACA,qCAEF,yBACEU,MAAO,CACLQ,OAAQ,OACRC,MAAO,OACPC,QAAS,OACTC,eAAgB,aAGlB,kBAAC,IAAD,CACEC,iBAAkB,CAChBC,IAAK,2CAEPC,cAAeR,EACfS,YAAaR,QCdVS,EAdF,WACX,OACE,yBAAK1B,GAAG,WACN,gDACA,yBAAK2B,IAAI,oCACT,yBAAKA,IAAI,oCACT,yBAAKA,IAAI,oCACT,yBAAKA,IAAI,oCACT,yBAAKA,IAAI,oCACT,yBAAKA,IAAI,sCCQAC,EAVb,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzB,IACjC,kBAAC,IAAD,CAAOwB,KAAK,SAASC,UAAWzB,IAChC,kBAAC,IAAD,CAAOwB,KAAK,QAAQC,UAAWL,IAC/B,kBAAC,IAAD,CAAOI,KAAK,YAAYC,UAAWnB,IACnC,kBAAC,IAAD,CAAOkB,KAAK,WAAWC,UAAWvB,KCUvBwB,EAjBH,WACV,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,OACb,wBAAIjC,GAAG,WACL,kBAAC,IAAD,CAAMG,GAAG,KACP,yBAAKH,GAAG,WAAW2B,IAAI,4BAG3B,kBAAC,EAAD,MACA,yBAAK3B,GAAG,iBAAiB4B,GACzB,kBAAC,EAAD,SCPYM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.91873f55.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = props => {\r\n  const pages = [\"About\", \"Menu\", \"Location\", \"Contact\"];\r\n\r\n  return (\r\n    <div id=\"navBar\">\r\n      <ul>\r\n        {pages.map(page => (\r\n          <Link to={`/${page.toLowerCase()}`}>\r\n            <li>{page}</li>\r\n          </Link>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n/* <li>About</li>\r\n        <li>üç™</li>\r\n        <li>Menu</li>\r\n        <li>üç™</li>\r\n        <li>Location</li>\r\n        <li>üç™</li>\r\n        <li>Contact</li> */\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div id=\"footer\">\r\n      <p>&copy; Copyright 2020</p>\r\n      <p>Made By Victor Zhang</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Welcome To Whillow Whisk Patisserie</h1>\r\n        <tr />\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Culpa,\r\n          perferendis quos! Corrupti dolores distinctio voluptatibus aliquam.\r\n          Delectus, quae doloremque placeat sint facere quis nobis fugiat? Porro\r\n          esse ut harum vel.\r\n        </p>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Culpa,\r\n          perferendis quos! Corrupti dolores distinctio voluptatibus aliquam.\r\n          Delectus, quae doloremque placeat sint facere quis nobis fugiat? Porro\r\n          esse ut harum vel.\r\n        </p>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Culpa,\r\n          perferendis quos! Corrupti dolores distinctio voluptatibus aliquam.\r\n          Delectus, quae doloremque placeat sint facere quis nobis fugiat? Porro\r\n          esse ut harum vel.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      <h2>CONTACT US</h2>\r\n      <div id=\"contact\">\r\n        <input placeholder=\"Name\"></input>\r\n        <input placeholder=\"E-mail\"></input>\r\n        <textarea\r\n          placeholder=\"Your message...\"\r\n          style={{ resize: \"none\" }}\r\n        ></textarea>\r\n        <button>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useState } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Location = () => {\r\n  const [center, setCenter] = useState({ lat: -6.2088, lng: 106.8456 });\r\n  const [zoom, setZoom] = useState(15);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Location</h2>\r\n      <div id=\"location\">\r\n        <div>\r\n          <p>123 Some Address Road</p>\r\n          <p>SUBURB, 4567</p>\r\n          <p>Indonesia</p>\r\n          <p>Hours</p>\r\n        </div>\r\n        <div\r\n          style={{\r\n            height: \"40vh\",\r\n            width: \"30vw\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\"\r\n          }}\r\n        >\r\n          <GoogleMapReact\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyCa4w8L7E_1H3PaIid_rghRouKFt-0iklM\"\r\n            }}\r\n            defaultCenter={center}\r\n            defaultZoom={zoom}\r\n          ></GoogleMapReact>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import React from \"react\";\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <div id=\"gallery\">\r\n      <h2>MENU || GALLERY </h2>\r\n      <img src=\"http://placeimg.com/480/360/any\"></img>\r\n      <img src=\"http://placeimg.com/500/360/any\"></img>\r\n      <img src=\"http://placeimg.com/530/360/any\"></img>\r\n      <img src=\"http://placeimg.com/450/360/any\"></img>\r\n      <img src=\"http://placeimg.com/510/360/any\"></img>\r\n      <img src=\"http://placeimg.com/460/360/any\"></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport About from \"./Components/About\";\r\nimport Contact from \"./Components/Contact\";\r\nimport Location from \"./Components/Location\";\r\nimport Menu from \"./Components/Menu\";\r\n\r\nconst Routes = (\r\n  <Switch>\r\n    {/* Switch only renders one Route. Without Switch, React may render multiple routes that match the path */}\r\n    <Route exact path=\"/\" component={About} />\r\n    <Route path=\"/about\" component={About} />\r\n    <Route path=\"/menu\" component={Menu} />\r\n    <Route path=\"/location\" component={Location} />\r\n    <Route path=\"/contact\" component={Contact} />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { useState } from \"react\";\n\nimport { HashRouter as Router, Link } from \"react-router-dom\";\n\nimport NavBar from \"./NavBar\";\nimport Footer from \"./Footer\";\nimport Routes from \"../Routes\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1 id=\"topLogo\">\n          <Link to=\"/\">\n            <img id=\"mainLogo\" src=\"whillow_wisk_logo.jpg\"></img>\n          </Link>\n        </h1>\n        <NavBar />\n        <div id=\"mainComponent\">{Routes}</div>\n        <Footer></Footer>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}